generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}
model User {
  id        String      @id @default(cuid())
  name      String
  email     String      @unique
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Relations
  snippets         Snippet[]
  collections      Collection[]
  userApiLimits    UserApiLimit?
  userSubscriptions UserSubscription?
}

model UserApiLimit {
  id        String      @id @default(cuid())
  userId    String   @unique  
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user    User      @relation(fields: [userId], references: [id])
}

model UserSubscription {
  id        String      @id @default(cuid())
  userId    String   @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user    User      @relation(fields: [userId], references: [id])
}

model Snippet {
  id      String      @id @default(cuid())
  userId  String
  name   String        
  content String
  language String
  usage    String?
  collectionId String? 
  collection  Collection? @relation(fields: [collectionId], references: [id])
  user    User      @relation(fields: [userId], references: [id])
  tags    Tag[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}
model Tag {
  id      String     @id @default(cuid())
  tagName  String    @unique
  snippets  Snippet[]
}
model SnippetVersion {
  id      String      @id @default(cuid())
  snippetId  String
  userId  String
  name   String        
  content String
  collectionId String? 
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}
model Collection {
  id      String      @id @default(cuid())
  userId  String
  name   String  
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user    User      @relation(fields: [userId], references: [id])
  snippets  Snippet[]
}